{"ast":null,"code":"import _slicedToArray from \"C:\\\\Internetanwendungen\\\\fh06\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Internetanwendungen\\\\fh06\\\\src\\\\Content.tsx\";\nimport React from 'react';\nimport { Button } from 'reactstrap';\nimport { Notes } from './Synthesizer';\nimport synthesizer from './Synthesizer';\n\nclass Content extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.play = note => {\n      synthesizer.play(note, 0.2);\n    };\n\n    this.playNotes = event => {\n      if (event.key === 'Enter') {\n        alert('enter press here!');\n      }\n    };\n\n    this.playNotes1 = () => {\n      const _useState = useState(false),\n            _useState2 = _slicedToArray(_useState, 2),\n            pressed = _useState2[0],\n            setPressed = _useState2[1]; // Does an event match the key we're watching?\n\n\n      const match = event => key.toLowerCase() == event.key.toLowerCase(); // Event handlers\n\n\n      const onDown = event => {\n        if (match(event)) setPressed(true);\n      };\n\n      const onUp = event => {\n        if (match(event)) setPressed(false);\n      }; // Bind and unbind events\n\n\n      useEffect(() => {\n        window.addEventListener(\"keydown\", onDown);\n        window.addEventListener(\"keyup\", onUp);\n        return () => {\n          window.removeEventListener(\"keydown\", onDown);\n          window.removeEventListener(\"keyup\", onUp);\n        };\n      }, [key]);\n      return pressed;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \">        \", Object.keys(Notes).map(note => {\n      return React.createElement(Button, {\n        onClick: () => this.play(Notes[note]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, note);\n    })));\n  }\n\n}\n\nexport default Content;","map":{"version":3,"sources":["C:/Internetanwendungen/fh06/src/Content.tsx"],"names":["React","Button","Notes","synthesizer","Content","Component","play","note","playNotes","event","key","alert","playNotes1","useState","pressed","setPressed","match","toLowerCase","onDown","onUp","useEffect","window","addEventListener","removeEventListener","render","Object","keys","map"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAIA,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAE7BC,IAF6B,GAErBC,IAAD,IAAkB;AAC9BJ,MAAAA,WAAW,CAACG,IAAZ,CAAiBC,IAAjB,EAAuB,GAAvB;AACD,KAJmC;;AAAA,SAK7BC,SAL6B,GAKhBC,KAAD,IAA4C;AAC7D,UAAGA,KAAK,CAACC,GAAN,KAAc,OAAjB,EAAyB;AACvBC,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;AACF,KATmC;;AAAA,SAW7BC,UAX6B,GAWhB,MAAI;AAAA,wBACQC,QAAQ,CAAC,KAAD,CADhB;AAAA;AAAA,YACfC,OADe;AAAA,YACNC,UADM,kBAGtB;;;AACA,YAAMC,KAAK,GAAGP,KAAK,IAAIC,GAAG,CAACO,WAAJ,MAAqBR,KAAK,CAACC,GAAN,CAAUO,WAAV,EAA5C,CAJsB,CAMtB;;;AACA,YAAMC,MAAM,GAAGT,KAAK,IAAI;AACtB,YAAIO,KAAK,CAACP,KAAD,CAAT,EAAkBM,UAAU,CAAC,IAAD,CAAV;AACnB,OAFD;;AAIA,YAAMI,IAAI,GAAGV,KAAK,IAAI;AACpB,YAAIO,KAAK,CAACP,KAAD,CAAT,EAAkBM,UAAU,CAAC,KAAD,CAAV;AACnB,OAFD,CAXsB,CAetB;;;AACAK,MAAAA,SAAS,CAAC,MAAM;AACdC,QAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCJ,MAAnC;AACAG,QAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCH,IAAjC;AACA,eAAO,MAAM;AACXE,UAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCL,MAAtC;AACAG,UAAAA,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCJ,IAApC;AACD,SAHD;AAID,OAPQ,EAON,CAACT,GAAD,CAPM,CAAT;AASA,aAAOI,OAAP;AACD,KArCmC;AAAA;;AAuC7BU,EAAAA,MAAP,GAAgB;AAEd,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACEC,MAAM,CAACC,IAAP,CAAYxB,KAAZ,EAAmByB,GAAnB,CAAuBpB,IAAI,IAAI;AAC/B,aACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKD,IAAL,CAAUJ,KAAK,CAACK,IAAD,CAAf,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgDA,IAAhD,CADF;AAGD,KAJC,CADF,CADF,CADF;AAWD;;AApDmC;;AAuDtC,eAAeH,OAAf","sourcesContent":["import React from 'react';\nimport { Button } from 'reactstrap';\nimport { Notes } from './Synthesizer';\nimport synthesizer from './Synthesizer';\nimport { KeyboardEvent } from \"react\";\n\n\nclass Content extends React.Component {\n\n  public play = (note: number) => {\n    synthesizer.play(note, 0.2);\n  };\n  public playNotes = (event:React.KeyboardEvent<KeyboardEvent>)=>{\n    if(event.key === 'Enter'){\n      alert('enter press here!');\n    }\n  };\n\n  public playNotes1 = ()=>{\n    const [pressed, setPressed] = useState(false)\n\n    // Does an event match the key we're watching?\n    const match = event => key.toLowerCase() == event.key.toLowerCase()\n\n    // Event handlers\n    const onDown = event => {\n      if (match(event)) setPressed(true)\n    }\n\n    const onUp = event => {\n      if (match(event)) setPressed(false)\n    }\n\n    // Bind and unbind events\n    useEffect(() => {\n      window.addEventListener(\"keydown\", onDown)\n      window.addEventListener(\"keyup\", onUp)\n      return () => {\n        window.removeEventListener(\"keydown\", onDown)\n        window.removeEventListener(\"keyup\", onUp)\n      }\n    }, [key])\n\n    return pressed\n  };\n\n  public render() {\n\n    return (\n      <div>\n        <div>\n>        {Object.keys(Notes).map(note => {\n          return (\n            <Button onClick={() => this.play(Notes[note])}>{note}</Button>\n          );\n        })}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Content;"]},"metadata":{},"sourceType":"module"}