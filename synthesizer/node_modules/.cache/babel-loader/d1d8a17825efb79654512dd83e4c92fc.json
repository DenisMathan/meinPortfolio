{"ast":null,"code":"var _jsxFileName = \"C:\\\\Internetanwendungen\\\\fh06\\\\src\\\\Content.tsx\";\nimport React from 'react';\nimport { Button } from 'reactstrap';\nimport { Notes } from './Synthesizer';\nimport synthesizer from './Synthesizer';\nvar play = false;\n\nclass Content extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.play = note => {\n      if (play == false) {\n        play = true;\n      } else {\n        play = false;\n      }\n\n      console.log(play);\n      synthesizer.play(note);\n    };\n\n    this.playNotes = event => {\n      if (event.key === 'Enter') {\n        alert('enter press here!');\n      }\n    };\n\n    this.playNotes1 = ({\n      e\n    }) => {\n      /*if(e.charCode===111){\n        alert(\"You pressed o!\");\n      }\n      else if(e.charCode===97){\n        synthesizer.play(1, e.charCode);\n      }\n      else{alert(e.charCode);}*/\n      //const [seconds, setSeconds] = useState(0);\n      if (e.charCode === 97) {\n        synthesizer.play(1);\n      }\n\n      console.log(e.charCode);\n    };\n  }\n\n  /*public stopNotes = ({e}: {e: any})=>{\n   synthesizer.noteStop();\n  };*/\n  render() {\n    return React.createElement(\"div\", {\n      tabIndex: 0,\n      className: \"test\",\n      onKeyPress: e => this.playNotes1({\n        e: e\n      })\n      /*onKeyUp={(e) => this.stopNotes({e: e})}*/\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, Object.keys(Notes).map(note => {\n      return React.createElement(Button, {\n        onClick: () => this.play(Notes[note]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, note);\n    }));\n  }\n\n}\n\nexport default Content;","map":{"version":3,"sources":["C:/Internetanwendungen/fh06/src/Content.tsx"],"names":["React","Button","Notes","synthesizer","play","Content","Component","note","console","log","playNotes","event","key","alert","playNotes1","e","charCode","render","Object","keys","map"],"mappings":";AAAA,OAAOA,KAAP,MAA8B,OAA9B;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAGA,IAAIC,IAAI,GAAG,KAAX;;AACA,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAE7BF,IAF6B,GAErBG,IAAD,IAAkB;AAC9B,UAAIH,IAAI,IAAE,KAAV,EAAgB;AACdA,QAAAA,IAAI,GAAC,IAAL;AACD,OAFD,MAGG;AAACA,QAAAA,IAAI,GAAC,KAAL;AAAW;;AAChBI,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACCD,MAAAA,WAAW,CAACC,IAAZ,CAAiBG,IAAjB;AACD,KATmC;;AAAA,SAU7BG,SAV6B,GAUhBC,KAAD,IAA4C;AAC7D,UAAGA,KAAK,CAACC,GAAN,KAAc,OAAjB,EAAyB;AACvBC,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;AACF,KAdmC;;AAAA,SAgB7BC,UAhB6B,GAgBhB,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAmB;AACrC;;;;;;;AAOA;AAEA,UAAGA,CAAC,CAACC,QAAF,KAAa,EAAhB,EAAmB;AACjBb,QAAAA,WAAW,CAACC,IAAZ,CAAiB,CAAjB;AACD;;AACDI,MAAAA,OAAO,CAACC,GAAR,CAAYM,CAAC,CAACC,QAAd;AAED,KA/BmC;AAAA;;AAgCpC;;;AAIOC,EAAAA,MAAP,GAAgB;AAEd,WACI;AAAK,MAAA,QAAQ,EAAE,CAAf;AAAkB,MAAA,SAAS,EAAC,MAA5B;AAAmC,MAAA,UAAU,EAAGF,CAAD,IAAO,KAAKD,UAAL,CAAgB;AAACC,QAAAA,CAAC,EAAEA;AAAJ,OAAhB;AAAyB;AAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,MAAM,CAACC,IAAP,CAAYjB,KAAZ,EAAmBkB,GAAnB,CAAuBb,IAAI,IAAI;AAChC,aACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKH,IAAL,CAAUF,KAAK,CAACK,IAAD,CAAf,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgDA,IAAhD,CADF;AAGD,KAJE,CADH,CADJ;AAUD;;AAhDmC;;AAmDtC,eAAeF,OAAf","sourcesContent":["import React, {useState} from 'react';\nimport { Button } from 'reactstrap';\nimport { Notes } from './Synthesizer';\nimport synthesizer from './Synthesizer';\nimport { KeyboardEvent } from \"react\";\n\nvar play = false;\nclass Content extends React.Component {\n\n  public play = (note: number) => {\n    if (play==false){\n      play=true\n    }\n   else{play=false}\n   console.log(play)\n    synthesizer.play(note);\n  };\n  public playNotes = (event:React.KeyboardEvent<KeyboardEvent>)=>{\n    if(event.key === 'Enter'){\n      alert('enter press here!');\n    }\n  };\n\n  public playNotes1 = ({e}: { e: any })=>{\n    /*if(e.charCode===111){\n      alert(\"You pressed o!\");\n    }\n    else if(e.charCode===97){\n      synthesizer.play(1, e.charCode);\n    }\n    else{alert(e.charCode);}*/\n    //const [seconds, setSeconds] = useState(0);\n\n    if(e.charCode===97){\n      synthesizer.play(1);\n    }\n    console.log(e.charCode);\n\n  };\n  /*public stopNotes = ({e}: {e: any})=>{\n   synthesizer.noteStop();\n  };*/\n\n  public render() {\n\n    return (\n        <div tabIndex={0} className=\"test\" onKeyPress={(e) => this.playNotes1({e: e})} /*onKeyUp={(e) => this.stopNotes({e: e})}*/>\n          {Object.keys(Notes).map(note => {\n          return (\n            <Button onClick={() => this.play(Notes[note])}>{note}</Button>\n          );\n        })}\n        </div>\n\n    )\n  }\n}\n\nexport default Content;"]},"metadata":{},"sourceType":"module"}