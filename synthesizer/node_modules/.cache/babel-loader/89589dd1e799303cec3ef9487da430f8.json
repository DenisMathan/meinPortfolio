{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\denis\\\\Desktop\\\\meine Website\\\\altherk\\xF6mmlich\\\\fh06\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\denis\\\\Desktop\\\\meine Website\\\\altherk\\xF6mmlich\\\\fh06\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";/*\nhttps://pages.mtu.edu/~suits/notefreqs.html\n*/ // 1 = loud\nvar VOLUME=0.3;var octavmtpl=1;// work around typescript warnings\nvar wnd=window;export var Notes={C:261.63,Cis:277.18,D:293.66,Dis:311.13,E:329.63,F:349.23,Fis:369.99,G:392,Gis:415.30,A:440,Ais:466.16,B:493.88,C2:261.63*2};var Synthesizer=/*#__PURE__*/function(){function Synthesizer(){_classCallCheck(this,Synthesizer);this.audioCtx=new(wnd['AudioContext']||wnd['webkitAudioContext'])();this.gainNode=void 0;this.gain=[GainNode,GainNode,GainNode];this.gainNode=this.audioCtx.createGain();// connect to audio context\nthis.gainNode.connect(this.audioCtx.destination);// lower volume\n//this.gainNode.gain.value = VOLUME;\n//this.gainNode.gain.setValueAtTime(0.3, this.audioCtx.currentTime);\n//this.gainNode.gain.exponentialRampToValueAtTime(0.1, this.audioCtx.currentTime + 0.5);\n}_createClass(Synthesizer,[{key:\"getGainNode\",value:function getGainNode(){var volume=VOLUME;return volume;}},{key:\"setOctavmtpl\",value:function setOctavmtpl(a){octavmtpl=a;console.log(octavmtpl);}},{key:\"volumePlus\",value:function volumePlus(){if(VOLUME<1){VOLUME=VOLUME+0.01;}else{VOLUME=1;}this.gainNode.gain.value=VOLUME/6;console.log(\"Vol: \"+VOLUME,\"Gain: \"+this.gainNode.gain.value);}},{key:\"volumeMinus\",value:function volumeMinus(){if(VOLUME>0.01){VOLUME=VOLUME-0.01;}else{VOLUME=0;}this.gainNode.gain.value=VOLUME/6;console.log(this.gainNode.gain.value);}},{key:\"play\",value:function play(note,type,i){var oscillator=this.audioCtx.createOscillator();var Osci=[this.audioCtx.createOscillator(),this.audioCtx.createOscillator(),this.audioCtx.createOscillator()];Osci[i].connect(this.gainNode);oscillator.connect(this.gainNode);// default\nOsci[i].type=type;Osci[i].frequency.value=note;oscillator.type=type;oscillator.frequency.value=note*octavmtpl;this.gainNode.gain.setValueAtTime(VOLUME/6,this.audioCtx.currentTime);//this.gainNode.gain.exponentialRampToValueAtTime(VOLUME, this.audioCtx.currentTime +0.5);\n//this.gainNode.gain.exponentialRampToValueAtTime(0.001, this.audioCtx.currentTime+0.5);\nthis.gainNode.gain.linearRampToValueAtTime(0.0,this.audioCtx.currentTime+0.2);//this.gainNode.gain.setValueAtTime(0, this.audioCtx.currentTime + 1);\n//oscillator.frequency.setValueAtTime(1, this.audioCtx.currentTime + 2 );\n//oscillator.frequency.setValueAtTime(0, this.audioCtx.currentTime + 2 );\noscillator.frequency.exponentialRampToValueAtTime(note*octavmtpl,this.audioCtx.currentTime+0.2);oscillator.start();oscillator.stop(this.audioCtx.currentTime+0.2);/*Osci[i].start();\n    Osci[i].stop(this.audioCtx.currentTime +2);*/console.log(i);}}]);return Synthesizer;}();var synthesizer=new Synthesizer();export default synthesizer;","map":{"version":3,"sources":["C:/Users/denis/Desktop/meine Website/altherk√∂mmlich/fh06/src/Synthesizer.ts"],"names":["VOLUME","octavmtpl","wnd","window","Notes","C","Cis","D","Dis","E","F","Fis","G","Gis","A","Ais","B","C2","Synthesizer","audioCtx","gainNode","gain","GainNode","createGain","connect","destination","volume","a","console","log","value","note","type","i","oscillator","createOscillator","Osci","frequency","setValueAtTime","currentTime","linearRampToValueAtTime","exponentialRampToValueAtTime","start","stop","synthesizer"],"mappings":"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","sourcesContent":["/*\nhttps://pages.mtu.edu/~suits/notefreqs.html\n*/\n\n\n// 1 = loud\nvar VOLUME = 0.3;\n\nvar octavmtpl = 1;\n\n\n// work around typescript warnings\nconst wnd = window as any;\n\nexport const Notes: {\n  [key: string]: number\n} = {\n  C: 261.63,\n  Cis: 277.18,\n  D: 293.66,\n  Dis: 311.13,\n  E: 329.63,\n  F: 349.23,\n  Fis: 369.99,\n  G: 392,\n  Gis: 415.30,\n  A: 440,\n  Ais: 466.16,\n  B: 493.88,\n  C2: 261.63 * 2\n};\n\nclass Synthesizer {\n\n  private audioCtx: AudioContext = new (wnd['AudioContext'] || wnd['webkitAudioContext'])();\n  private gainNode : GainNode;\n  private gain = [GainNode, GainNode, GainNode];\n\n\n\n  constructor() {\n\n    this.gainNode= this.audioCtx.createGain();\n    // connect to audio context\n    this.gainNode.connect(this.audioCtx.destination);\n\n    // lower volume\n    //this.gainNode.gain.value = VOLUME;\n    //this.gainNode.gain.setValueAtTime(0.3, this.audioCtx.currentTime);\n\n    //this.gainNode.gain.exponentialRampToValueAtTime(0.1, this.audioCtx.currentTime + 0.5);\n\n  }\n  public getGainNode(){\n    var volume = VOLUME;\n    return volume;\n  }\n  public setOctavmtpl(a: number){\n    octavmtpl = a;\n    console.log(octavmtpl)\n  }\n\n  public volumePlus () {\n    if(VOLUME<1){\n    VOLUME = VOLUME + 0.01;}\n    else{\n      VOLUME = 1;\n    }\n    this.gainNode.gain.value=VOLUME/6;\n    console.log(\"Vol: \"+VOLUME ,\"Gain: \"+this.gainNode.gain.value);\n  }\n  public volumeMinus () {\n    if(VOLUME>0.01){\n    VOLUME = VOLUME - 0.01;}\n    else{\n      VOLUME=0;\n    }\n    this.gainNode.gain.value=VOLUME/6;\n    console.log(this.gainNode.gain.value);\n  }\n\n  public play(note: number, type: any, i: number) {\n    const oscillator = this.audioCtx.createOscillator();\n    const Osci = [this.audioCtx.createOscillator(),this.audioCtx.createOscillator(),this.audioCtx.createOscillator()];\n\n    Osci[i].connect(this.gainNode);\n\n    oscillator.connect(this.gainNode);\n\n    // default\n    Osci[i].type = type;\n    Osci[i].frequency.value = note;\n    oscillator.type = type;\n    oscillator.frequency.value = note*octavmtpl;\n\n\n    this.gainNode.gain.setValueAtTime(VOLUME/6, this.audioCtx.currentTime );\n    //this.gainNode.gain.exponentialRampToValueAtTime(VOLUME, this.audioCtx.currentTime +0.5);\n    //this.gainNode.gain.exponentialRampToValueAtTime(0.001, this.audioCtx.currentTime+0.5);\n    this.gainNode.gain.linearRampToValueAtTime(0.0, this.audioCtx.currentTime+0.2);\n    //this.gainNode.gain.setValueAtTime(0, this.audioCtx.currentTime + 1);\n    //oscillator.frequency.setValueAtTime(1, this.audioCtx.currentTime + 2 );\n    //oscillator.frequency.setValueAtTime(0, this.audioCtx.currentTime + 2 );\n    oscillator.frequency.exponentialRampToValueAtTime(note*octavmtpl,this.audioCtx.currentTime + 0.2 );\n    oscillator.start();\n    oscillator.stop(this.audioCtx.currentTime + 0.2 );\n    /*Osci[i].start();\n    Osci[i].stop(this.audioCtx.currentTime +2);*/\n    console.log(i);\n\n  }\n\n\n\n}\n\nconst synthesizer = new Synthesizer();\nexport default synthesizer;"]},"metadata":{},"sourceType":"module"}