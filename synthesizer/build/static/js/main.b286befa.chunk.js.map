{"version":3,"sources":["Synthesizer.ts","Content.tsx","App.tsx","index.tsx"],"names":["VOLUME","octavmtpl","wnd","window","Notes","C","Cis","D","Dis","E","F","Fis","G","Gis","A","Ais","B","C2","synthesizer","audioCtx","gainNode","gain","GainNode","this","createGain","connect","destination","a","console","log","value","note","type","i","oscillator","createOscillator","Osci","frequency","setValueAtTime","currentTime","linearRampToValueAtTime","exponentialRampToValueAtTime","start","stop","z","octavZahl","Content","props","play","Sound","state","num","playNotes","event","key","alert","playNotes1","e","keyCode","volumePlus","volumeMinus","setState","sound","volume","Math","round","getGainNode","octaveHoch","setOctavmtpl","octaveRunter","tabIndex","className","onKeyDown","onClick","Object","keys","map","Button","React","Component","App","xl","style","backgroundColor","height","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b286befa.chunk.js","sourcesContent":["/*\nhttps://pages.mtu.edu/~suits/notefreqs.html\n*/\n\n\n// 1 = loud\nvar VOLUME = 0.3;\n\nvar octavmtpl = 1;\n\n\n// work around typescript warnings\nconst wnd = window as any;\n\nexport const Notes: {\n  [key: string]: number\n} = {\n  C: 261.63,\n  Cis: 277.18,\n  D: 293.66,\n  Dis: 311.13,\n  E: 329.63,\n  F: 349.23,\n  Fis: 369.99,\n  G: 392,\n  Gis: 415.30,\n  A: 440,\n  Ais: 466.16,\n  B: 493.88,\n  C2: 261.63 * 2\n};\n\nclass Synthesizer {\n\n  private audioCtx: AudioContext = new (wnd['AudioContext'] || wnd['webkitAudioContext'])();\n  private gainNode : GainNode;\n  private gain = [GainNode, GainNode, GainNode];\n\n\n\n  constructor() {\n\n    this.gainNode= this.audioCtx.createGain();\n    // connect to audio context\n    this.gainNode.connect(this.audioCtx.destination);\n\n    // lower volume\n    //this.gainNode.gain.value = VOLUME;\n    //this.gainNode.gain.setValueAtTime(0.3, this.audioCtx.currentTime);\n\n    //this.gainNode.gain.exponentialRampToValueAtTime(0.1, this.audioCtx.currentTime + 0.5);\n\n  }\n  public getGainNode(){\n    var volume = VOLUME;\n    return volume;\n  }\n  public setOctavmtpl(a: number){\n    octavmtpl = a;\n    console.log(octavmtpl)\n  }\n\n  public volumePlus () {\n    if(VOLUME<1){\n    VOLUME = VOLUME + 0.01;}\n    else{\n      VOLUME = 1;\n    }\n    this.gainNode.gain.value=VOLUME/6;\n    console.log(\"Vol: \"+VOLUME ,\"Gain: \"+this.gainNode.gain.value);\n  }\n  public volumeMinus () {\n    if(VOLUME>0.01){\n    VOLUME = VOLUME - 0.01;}\n    else{\n      VOLUME=0;\n    }\n    this.gainNode.gain.value=VOLUME/6;\n    console.log(this.gainNode.gain.value);\n  }\n\n  public play(note: number, type: any, i: number) {\n    const oscillator = this.audioCtx.createOscillator();\n    const Osci = [this.audioCtx.createOscillator(),this.audioCtx.createOscillator(),this.audioCtx.createOscillator()];\n\n    Osci[i].connect(this.gainNode);\n\n    oscillator.connect(this.gainNode);\n\n    // default\n    Osci[i].type = type;\n    Osci[i].frequency.value = note;\n    oscillator.type = type;\n    oscillator.frequency.value = note*octavmtpl;\n\n\n    this.gainNode.gain.setValueAtTime(VOLUME/6, this.audioCtx.currentTime );\n    //this.gainNode.gain.exponentialRampToValueAtTime(VOLUME, this.audioCtx.currentTime +0.5);\n    //this.gainNode.gain.exponentialRampToValueAtTime(0.001, this.audioCtx.currentTime+0.5);\n    this.gainNode.gain.linearRampToValueAtTime(0.0, this.audioCtx.currentTime+0.2);\n    //this.gainNode.gain.setValueAtTime(0, this.audioCtx.currentTime + 1);\n    //oscillator.frequency.setValueAtTime(1, this.audioCtx.currentTime + 2 );\n    //oscillator.frequency.setValueAtTime(0, this.audioCtx.currentTime + 2 );\n    oscillator.frequency.exponentialRampToValueAtTime(note*octavmtpl,this.audioCtx.currentTime + 0.2 );\n    oscillator.start();\n    oscillator.stop(this.audioCtx.currentTime + 0.2 );\n    /*Osci[i].start();\n    Osci[i].stop(this.audioCtx.currentTime +2);*/\n    console.log(i);\n\n  }\n\n\n\n}\n\nconst synthesizer = new Synthesizer();\nexport default synthesizer;","import React, {useState} from 'react';\nimport {Button} from 'reactstrap';\nimport {Notes} from './Synthesizer';\nimport synthesizer from './Synthesizer';\nimport {KeyboardEvent} from \"react\";\n\n\n\nvar i = 0;\nvar z = 0;\nvar octavZahl=1;\n\ninterface IState {\n  volume: number,\n  sound: string,\n  num: number\n\n}\ninterface IProps {\n  Sound: string[];\n  //soundArr: 'sine' | 'triangle' | 'piano';\n  //soundArr:'sine';\n}\n\nclass Content extends React.Component<IProps, IState> {\n  constructor (props:any){\n    super(props);\n    this.state = {\n      sound: \"sine\",\n      volume: 30,\n      num: 0\n    }\n  }\n  public getSound(){\n    return (this.props.Sound[i]);\n  }\n  public play = (note: number) => {\n\n    synthesizer.play(note, this.props.Sound[i], this.state.num);\n  };\n  public playNotes = (event: React.KeyboardEvent<KeyboardEvent>) => {\n    if (event.key === 'Enter') {\n      alert('enter press here!');\n    }\n  };\n\n  public playNotes1 = ({e}: { e: any }) => {\n    if (z>1){\n      z=0;\n    }\n    else\n    {z++;}\n\n\n\n    if (e.keyCode === 65) {\n      synthesizer.play(263.63, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 87) {\n      synthesizer.play(277.18, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 83) {\n      synthesizer.play(293.66, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 69) {\n      synthesizer.play(311.13, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 68) {\n      synthesizer.play(329.63, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 70) {\n      synthesizer.play(349.23, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 84) {\n      synthesizer.play(369.99, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 71) {\n      synthesizer.play(392, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 90) {\n      synthesizer.play(415.3, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 72) {\n      synthesizer.play(440, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 85) {\n      synthesizer.play(466.16, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 74) {\n      synthesizer.play(493.88, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 75) {\n      synthesizer.play(261.63 * 2, this.props.Sound[i], z);\n    }\n\n\n    else if(e.keyCode === 38) {\n      synthesizer.volumePlus()\n    }\n    else if(e.keyCode === 40) {\n      synthesizer.volumeMinus()\n    }\n\n    else if(e.keyCode ===39){\n\n      if (i>2){\n        i=0;\n      }\n      else\n        {i++;}\n      this.setState({\n        sound: this.props.Sound[i]\n      })\n\n    }\n    else if(e.keyCode ===37){\n\n      if (i===0){\n        i=3;\n      }\n      else\n      {i--;}\n      this.setState({\n        sound: this.props.Sound[i]\n      })\n\n    }\n    console.log(i + this.props.Sound[i] + e.keyCode);\n    this.setState({\n      volume: Math.round(synthesizer.getGainNode()*100)\n\n      }\n    )\n\n  };\n\n\n\n  /*public stopNotes = ({e}: {e: any})=>{\n   synthesizer.noteStop();\n  };*/\n  public octaveHoch = () =>{\n    octavZahl=octavZahl*2;\n    synthesizer.setOctavmtpl(octavZahl);\n  };\n  public octaveRunter = () =>{\n    octavZahl=octavZahl/2;\n    synthesizer.setOctavmtpl(octavZahl);\n  };\n\n\n\n  public render() {\n\n    return (\n      <div tabIndex={0} className=\"test\" onKeyDown={(e) => this.playNotes1({e: e})}>\n        <div>\n          <h1 className=\"hervorgehoben\">Mein kleiner Synthesizer</h1>\n          <p>Um die Tastatur zu benutzen <span className=\"hervorgehoben\">klicke auf die Seite!</span></p>\n          <p> <button onClick={()=>this.octaveHoch()}>Oktave++</button>\n                    <button onClick={()=>this.octaveRunter()}>Oktave--</button></p>\n          <p>Um die Lautstärke und den Sound einzustellen <span className=\"hervorgehoben\">benutze die Pfeiltasten!</span></p>\n          <p>Volume:  <span className=\"hervorgehoben\">{this.state.volume}</span>% </p>\n          <p>Sound: <span className=\"hervorgehoben\">{i+1+\". \"+this.state.sound}</span></p>\n        </div>\n        {Object.keys(Notes).map(note => {\n          return (\n            <Button onClick={() => this.play(Notes[note])}>{note}</Button>\n          );\n\n        })}\n        <p></p>\n        <div>Die <span className=\"hervorgehoben\">ganzen Noten</span> liegen auf den Buchstaben: <span className=\"hervorgehoben\">a s d f g h j k</span> </div>\n        <div><p>Die <span className=\"hervorgehoben\">halbtonschritte dazwischen</span> liegen auf den Buchstaben: <span className=\"hervorgehoben\">w e t z u</span></p>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default Content;","import React from 'react';\nimport {style} from 'typestyle';\nimport {Container, Col, Row} from 'reactstrap';\nimport {Switch, Route} from 'react-router-dom';\nimport Content from './Content';\n\n\n/*\n  Overview on react strap: https://reactstrap.github.io/\n  Components: https://reactstrap.github.io/components/\n*/\n\n/* We don't need externally provided Props, so we set the props part to {} */\n\n/* But, we want to type our local state with the IState definition */\nclass App extends React.Component {\n\n  public render() {\n    const Sounds = [\"sine\", \"triangle\", 'sawtooth', 'square'];\n    // @ts-ignore\n    // @ts-ignore\n    return <div className=\"backgroundcolor h-100 justify-content-center text-center\" xl=\"auto\">\n            <Content Sound={Sounds}/>\n          </div>\n\n\n  }\n}\n\nconst col1 = style({\n  backgroundColor: '#eeeeee',\n  height: '100%'\n});\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}