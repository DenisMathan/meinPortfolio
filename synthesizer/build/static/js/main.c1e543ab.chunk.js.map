{"version":3,"sources":["Synthesizer.ts","Content.tsx","App.tsx","index.tsx"],"names":["VOLUME","tonlaenge","sweepDifferenz","octavmtpl","wnd","window","Notes","C","Cis","D","Dis","E","F","Fis","G","Gis","A","Ais","B","C2","synthesizer","audioCtx","gain1","myGain","this","length","i","createGain","connect","destination","gain","value","a","console","log","note","type","oscillator","createOscillator","sweep","frequency","setValueAtTime","currentTime","linearRampToValueAtTime","exponentialRampToValueAtTime","start","stop","z","octavZahl","Content","props","play","Sound","state","num","playNotes","event","key","alert","playNotes1","e","keyCode","volumePlus","volumeMinus","tonl채ngePlus","tonl채ngeMinus","sweepDifferenzMinus","sweepDifferenzPlus","setState","sound","volume","Math","round","getGainNode","getsweepDifferenz","laenge","getTonLaenge","octaveHoch","setOctavmtpl","octaveRunter","tabIndex","className","onKeyDown","onClick","Object","keys","map","Button","React","Component","App","xl","style","backgroundColor","height","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1e543ab.chunk.js","sourcesContent":["/*\nhttps://pages.mtu.edu/~suits/notefreqs.html\n*/\n\n\n// 1 = loud\nvar VOLUME = 0.3;\nvar tonlaenge = 0.5;\nvar sweepDifferenz = 0;\n\nvar octavmtpl = 1;\n\n\n// work around typescript warnings\nconst wnd = window as any;\n\nexport const Notes: {\n  [key: string]: number\n} = {\n  C: 261.63,\n  Cis: 277.18,\n  D: 293.66,\n  Dis: 311.13,\n  E: 329.63,\n  F: 349.23,\n  Fis: 369.99,\n  G: 392,\n  Gis: 415.30,\n  A: 440,\n  Ais: 466.16,\n  B: 493.88,\n  C2: 261.63 * 2\n};\n\nclass Synthesizer {\n\n  private audioCtx: AudioContext = new (wnd['AudioContext'] || wnd['webkitAudioContext'])();\n\n  private gain1: GainNode[];\n\n  private myGain: any;\n\n\n\n  constructor() {\n    this.gain1 = [];\n    this.gain1.length = 15;\n    for (let i = 0; i < 15; i++) {\n      this.gain1[i] = this.audioCtx.createGain();\n      this.gain1[i].connect(this.audioCtx.destination);\n    }\n\n\n\n    // lower volume\n    for (let i = 0; i < 15; i++) {\n      this.gain1[i].gain.value = VOLUME / 10;\n    }\n    //this.gainNode.gain.value = VOLUME;\n    //this.gainNode.gain.setValueAtTime(0.3, this.audioCtx.currentTime);\n\n    //this.gainNode.gain.exponentialRampToValueAtTime(0.1, this.audioCtx.currentTime + 0.5);\n\n  }\n\n  public getGainNode() {\n    //var volume = VOLUME;\n    return VOLUME;\n  }\n\n  public getsweepDifferenz() {\n    return sweepDifferenz\n  }\n\n  public getTonLaenge() {\n    return tonlaenge;\n  }\n\n  public setOctavmtpl(a: number) {\n    octavmtpl = a;\n    console.log(octavmtpl)\n  }\n\n  public volumePlus() {\n    if (VOLUME < 1) {\n      VOLUME = VOLUME + 0.01;\n    } else {\n      VOLUME = 1;\n    }\n    for (let i = 0; i < 15; i++) {\n      this.gain1[i].gain.value = VOLUME / 6;\n    }\n\n\n  }\n\n  public volumeMinus() {\n    if (VOLUME > 0.01) {\n      VOLUME = VOLUME - 0.01;\n    } else {\n      VOLUME = 0;\n    }\n    for (let i = 0; i < 15; i++) {\n      this.gain1[i].gain.value = VOLUME / 6;\n    }\n\n  }\n\n  public tonl채ngePlus() {\n    tonlaenge = tonlaenge + 0.1;\n  }\n\n  public tonl채ngeMinus() {\n    tonlaenge = tonlaenge - 0.1;\n  }\n\n  public sweepDifferenzPlus() {\n    sweepDifferenz = sweepDifferenz + 100;\n  }\n\n  public sweepDifferenzMinus() {\n    sweepDifferenz = sweepDifferenz - 100;\n  }\n\n  public play(note: number, type: any, i: number) {\n    const oscillator = this.audioCtx.createOscillator();\n    let sweep = note * octavmtpl + sweepDifferenz;\n    if(sweep<1){\n      sweep=1\n    }\n\n  console.log(\"sweep:\"+sweep);\n\n\n    oscillator.connect(this.gain1[i]);\n\n\n    //Osci[i].connect(this.myGain);\n    // default\n\n    oscillator.type = type;\n    oscillator.frequency.value = note * octavmtpl;\n\n\n    this.gain1[i].gain.setValueAtTime(VOLUME / 10, this.audioCtx.currentTime);\n    //this.gainNode.gain.exponentialRampToValueAtTime(VOLUME, this.audioCtx.currentTime +0.5);\n    //this.gainNode.gain.exponentialRampToValueAtTime(0.0, this.audioCtx.currentTime+0.5);\n    this.gain1[i].gain.linearRampToValueAtTime(0.0, this.audioCtx.currentTime + tonlaenge - 0.1);\n    //this.gainNode.gain.setValueAtTime(0, this.audioCtx.currentTime + 1);\n    //oscillator.frequency.setValueAtTime(1, this.audioCtx.currentTime + 2 );\n    //oscillator.frequency.setValueAtTime(0, this.audioCtx.currentTime + 2 );\n    oscillator.frequency.exponentialRampToValueAtTime(/*note*octavmtpl*/ sweep, this.audioCtx.currentTime + tonlaenge -0.1);\n    oscillator.start();\n    oscillator.stop(this.audioCtx.currentTime + tonlaenge);\n    //Osci[i].start();\n    //Osci[i].stop(this.audioCtx.currentTime + tonlaenge);\n    console.log(i);\n\n  }\n\n\n}\n\nconst synthesizer = new Synthesizer();\nexport default synthesizer;","import React, {useState} from 'react';\nimport {Button} from 'reactstrap';\nimport {Notes} from './Synthesizer';\nimport synthesizer from './Synthesizer';\n//import {KeyboardEvent} from \"react\";\n\n\n\nvar i = 0;\nvar z = 0;\nvar octavZahl=1;\n\ninterface IState {\n  volume: number,\n  sound: string,\n  num: number,\n  laenge: number,\n  sweep: number\n\n}\ninterface IProps {\n  Sound: string[];\n  //soundArr: 'sine' | 'triangle' | 'piano';\n  //soundArr:'sine';\n}\n\nclass Content extends React.Component<IProps, IState> {\n  constructor (props:any){\n    super(props);\n    this.state = {\n      sound: \"sine\",\n      volume: 30,\n      num: 0,\n      laenge:5,\n      sweep: 0\n    }\n  }\n  public getSound(){\n    return (this.props.Sound[i]);\n  }\n  public play = (note: number) => {\n\n    synthesizer.play(note, this.props.Sound[i], this.state.num);\n  };\n  public playNotes = (event: React.KeyboardEvent<KeyboardEvent>) => {\n    if (event.key === 'Enter') {\n      alert('enter press here!');\n    }\n  };\n\n  public playNotes1 = ({e}: { e: any }) => {\n    if (z>13){\n      z=0;\n    }\n    else\n    {z++;}\n\n\n\n    if (e.keyCode === 65) {\n      synthesizer.play(263.63, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 87) {\n      synthesizer.play(277.18, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 83) {\n      synthesizer.play(293.66, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 69) {\n      synthesizer.play(311.13, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 68) {\n      synthesizer.play(329.63, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 70) {\n      synthesizer.play(349.23, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 84) {\n      synthesizer.play(369.99, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 71) {\n      synthesizer.play(392, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 90) {\n      synthesizer.play(415.3, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 72) {\n      synthesizer.play(440, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 85) {\n      synthesizer.play(466.16, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 74) {\n      synthesizer.play(493.88, this.props.Sound[i], z);\n    }\n    else if (e.keyCode === 75) {\n      synthesizer.play(261.63 * 2, this.props.Sound[i], z);\n    }\n\n\n    else if(e.keyCode === 38) {\n      synthesizer.volumePlus();\n    }\n    else if(e.keyCode === 40) {\n      synthesizer.volumeMinus();\n    }\n    //+\n    else if(e.keyCode === 187){\n      synthesizer.tonl채ngePlus();\n    }\n    //-\n    else if(e.keyCode === 189){\n      synthesizer.tonl채ngeMinus()\n    }\n    //y\n    else if(e.keyCode === 89){\n      synthesizer.sweepDifferenzMinus();\n    }\n    //x\n    else if(e.keyCode === 88){\n      synthesizer.sweepDifferenzPlus();\n    }\n\n\n    else if(e.keyCode ===39){\n\n      if (i>2){\n        i=0;\n      }\n      else\n        {i++;}\n      this.setState({\n        sound: this.props.Sound[i]\n      })\n\n    }\n    else if(e.keyCode ===37){\n\n      if (i===0){\n        i=3;\n      }\n      else\n      {i--;}\n      this.setState({\n        sound: this.props.Sound[i]\n      })\n\n    }\n\n    this.setState({\n      volume: Math.round(synthesizer.getGainNode()*100),\n      sweep: Math.round(synthesizer.getsweepDifferenz()),\n      laenge: Math.round(synthesizer.getTonLaenge()*10)\n      }\n    )\n\n  };\n\n\n\n  /*public stopNotes = ({e}: {e: any})=>{\n   synthesizer.noteStop();\n  };*/\n  public octaveHoch = () =>{\n\n    octavZahl=octavZahl*2;\n    synthesizer.setOctavmtpl(octavZahl);\n  };\n  public octaveRunter = () =>{\n    octavZahl=octavZahl/2;\n    synthesizer.setOctavmtpl(octavZahl);\n  };\n\n\n\n  public render() {\n\n    return (\n      <div tabIndex={0} className=\"test\" onKeyDown={(e) => this.playNotes1({e: e})}>\n        <div>\n          <h1 className=\"hervorgehoben\">Mein kleiner Synthesizer</h1>\n          <p>Um die Tastatur zu benutzen <span className=\"hervorgehoben\">klicke auf die Seite!</span></p>\n          <p> <button onClick={()=>this.octaveHoch()}>Oktave++</button>\n                    <button onClick={()=>this.octaveRunter()}>Oktave--</button></p>\n          <p>Um die Lautst채rke und den Sound einzustellen <span className=\"hervorgehoben\">benutze die Pfeiltasten!</span></p>\n          <p>Sound (&larr; &rarr;): <span className=\"hervorgehoben\">{i+1+\". \"+this.state.sound}</span></p>\n          <p>Volume (&uarr; &darr;): (  <span className=\"hervorgehoben\">{this.state.volume}</span>% </p>\n          <p>Ton-L채nge (- +):  <span className=\"hervorgehoben\">{this.state.laenge}</span>ms </p>\n          <p>Sweep (y x):  <span className=\"hervorgehoben\"> &Delta;({this.state.sweep}hz)</span> </p>\n\n        </div>\n        {Object.keys(Notes).map(note => {\n          return (\n            <Button onClick={() => this.play(Notes[note])}>{note}</Button>\n          );\n\n        })}\n        <p></p>\n        <div>Die <span className=\"hervorgehoben\">ganzen Noten</span> liegen auf den Buchstaben: <span className=\"hervorgehoben\">a s d f g h j k</span> </div>\n        <div><p>Die <span className=\"hervorgehoben\">halbtonschritte dazwischen</span> liegen auf den Buchstaben: <span className=\"hervorgehoben\">w e t z u</span></p>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default Content;","import React from 'react';\nimport {style} from 'typestyle';\nimport {Container, Col, Row} from 'reactstrap';\nimport {Switch, Route} from 'react-router-dom';\nimport Content from './Content';\n\n\n/*\n  Overview on react strap: https://reactstrap.github.io/\n  Components: https://reactstrap.github.io/components/\n*/\n\n/* We don't need externally provided Props, so we set the props part to {} */\n\n/* But, we want to type our local state with the IState definition */\nclass App extends React.Component {\n\n  public render() {\n    const Sounds = [\"sine\", \"triangle\", 'sawtooth', 'square'];\n    // @ts-ignore\n    // @ts-ignore\n    return <div className=\"backgroundcolor h-100 justify-content-center text-center\" xl=\"auto\">\n            <Content Sound={Sounds}/>\n          </div>\n\n\n  }\n}\n\nconst col1 = style({\n  backgroundColor: '#eeeeee',\n  height: '100%'\n});\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}